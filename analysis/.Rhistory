cur_subj_dat <- subset(study, uniqueId==cur_subj)
ord <- data.matrix(cur_subj_dat[,c(8,9,10,11)]) + 1
return(ord)
}
source("ReadMturkData.R")
subjs <- unique(as.character(study$uniqueId))
lia_subj_dat <- subset(study, condition=="Low Initial Accuracy")
hia_subj_dat <- subset(study, condition=="High Initial Accuracy")
lia_subjs <- unique(as.character(lia_subj_dat$uniqueId))
hia_subjs <- unique(as.character(hia_subj_dat$uniqueId))
get_subj_ord <- function(subj) {
cur_subj <- subj
cur_subj_dat <- subset(study, uniqueId==cur_subj)
ord <- data.matrix(cur_subj_dat[,c(8,9,10,11)]) + 1
return(ord)
}
source("FitChristmodel.R")
par
RunFitnevaChristiansenExp <- function(par, Nsubj=45) {
# par = c(.2, 2, .95)
mdat = data.frame(Cond=c("Low IA","Low IA", "High IA", "High IA"),
Item=c("Initially Accurate","Initially Inaccurate","Initially Accurate","Initially Inaccurate"),
Mean=NA, SD=NA)
X = par[1]*(par[3]^2)
wordOrder = c(1,3,5,7,9,11,13,15,17,0,2,4,6,8,10,12,14,16) +1
objOrder =  c(0,2,4,6,8,10,12,14,16,1,3,5,7,9,11,13,15,17) + 1
highIA_m = matrix(0, nrow=18, ncol=18)
hiawordOrder =  c(1,14,5,10,9,6,13,15,17,0,2,4,11,8,7,12,3,16) + 1
fam_m = matrix(0, nrow=18, ncol=18)
for(i in 1:length(wordOrder)) {
fam_m[wordOrder[i],objOrder[i]] = X
}
for(i in 1:length(wordOrder)) {
#highIA_m[hiawordOrder[i],wordOrder[i]] = X
highIA_m[hiawordOrder[i],objOrder[i]] = X
}
HIA_initInac = which(wordOrder!=hiawordOrder)
HIA_initAcc = which(wordOrder==hiawordOrder)
lowIA_m = matrix(0, nrow=18, ncol=18)
liawordOrder =  c(16,14,5,10,9,6,13,2,0,17,15,4,11,8,7,12,3,1) + 1
for(i in 1:length(wordOrder)) {
#lowIA_m[liawordOrder[i],wordOrder[i]] = X
lowIA_m[liawordOrder[i],objOrder[i]] = X
}
LIA_initInac = which(wordOrder!=liawordOrder)
LIA_initAcc = which(wordOrder==liawordOrder)
lowIA_inac = rep(0, Nsubj)
lowIA_acc =rep(0, Nsubj)
highIA_acc = rep(0, Nsubj)
highIA_inac =rep(0, Nsubj)
for(i in 1:length(lia_subjs)){
#print("Low Initial Accuracy condition (12/18 pairs wrong at familiarization)")
ord <- get_subj_ord(lia_subjs[i])
lom = model(par, ord=ord, m=lowIA_m) # does the training (on prefam matrix)
#acc18afc = diag(lom) / rowSums(lom) # assumes w1=o1 etc w18=o18
#acc18afc = evaluate_accuracy(lom)
mean(acc18afc) # low initial accuracy is good for the model (like adults)
lowIA_inac[i] = mean(acc18afc[LIA_initInac]) # Low IA Initially Inaccurate
lowIA_acc[i] = mean(acc18afc[LIA_initAcc]) # Low IA Initially Accurate
}
for(i in 1:length(hia_subjs)){
ord <- get_subj_ord(hia_subjs[i])
#print("High Initial Accuracy condition (4/10 pairs wrong at familiarization)")
him = model(par, ord=ord, m=highIA_m)
acc18afc = diag(him) / rowSums(him)
mean(acc18afc) # high initial accuracy actually hinders the model somehow...cool!
highIA_inac[i] = mean(acc18afc[HIA_initInac]) #
highIA_acc[i] = mean(acc18afc[HIA_initAcc]) #
}
mdat[2,]$Mean = mean(lowIA_inac) # Low IA Initially Inaccurate
mdat[2,]$SD = sd(lowIA_inac)
mdat[1,]$Mean = mean(lowIA_acc) # Low IA Initially Accurate
mdat[1,]$SD = sd(lowIA_acc) #
mdat[4,]$Mean = mean(highIA_inac) #
mdat[4,]$SD = sd(highIA_inac)
mdat[3,]$Mean = mean(highIA_acc) #
mdat[3,]$SD = sd(highIA_acc) #
return(mdat)
}
X = 1
for(i in 1:length(wordOrder)) {
fam_m[wordOrder[i],objOrder[i]] = X
}
View(fam_m)
View(fam_m)
source("ReadMturkData.R")
subjs <- unique(as.character(study$uniqueId))
lia_subj_dat <- subset(study, condition=="Low Initial Accuracy")
hia_subj_dat <- subset(study, condition=="High Initial Accuracy")
lia_subjs <- unique(as.character(lia_subj_dat$uniqueId))
hia_subjs <- unique(as.character(hia_subj_dat$uniqueId))
get_subj_ord <- function(subj) {
cur_subj <- subj
cur_subj_dat <- subset(study, uniqueId==cur_subj)
ord <- data.matrix(cur_subj_dat[,c(8,9,10,11)]) + 1
return(ord)
}
evaluate_accuracy <- function(mod_matrix) {
acc = rep(0,18)
# for(w in 1:18) {
#  find corresponding obj o and store
#
# }
acc[14] = mod_matrix[14,13] / sum(mod_matrix[14,])
return(acc)
}
source("FitChristmodel.R")
RunFitnevaChristiansenExp <- function(par, Nsubj=45) {
# par = c(.2, 2, .95)
mdat = data.frame(Cond=c("Low IA","Low IA", "High IA", "High IA"),
Item=c("Initially Accurate","Initially Inaccurate","Initially Accurate","Initially Inaccurate"),
Mean=NA, SD=NA)
X = par[1]*(par[3]^2)
wordOrder = c(1,3,5,7,9,11,13,15,17,0,2,4,6,8,10,12,14,16) +1
objOrder =  c(0,2,4,6,8,10,12,14,16,1,3,5,7,9,11,13,15,17) + 1
highIA_m = matrix(0, nrow=18, ncol=18)
hiawordOrder =  c(1,14,5,10,9,6,13,15,17,0,2,4,11,8,7,12,3,16) + 1
fam_m = matrix(0, nrow=18, ncol=18)
for(i in 1:length(wordOrder)) {
fam_m[wordOrder[i],objOrder[i]] = X
}
for(i in 1:length(wordOrder)) {
#highIA_m[hiawordOrder[i],wordOrder[i]] = X
highIA_m[hiawordOrder[i],objOrder[i]] = X
}
HIA_initInac = which(wordOrder!=hiawordOrder)
HIA_initAcc = which(wordOrder==hiawordOrder)
lowIA_m = matrix(0, nrow=18, ncol=18)
liawordOrder =  c(16,14,5,10,9,6,13,2,0,17,15,4,11,8,7,12,3,1) + 1
for(i in 1:length(wordOrder)) {
#lowIA_m[liawordOrder[i],wordOrder[i]] = X
lowIA_m[liawordOrder[i],objOrder[i]] = X
}
LIA_initInac = which(wordOrder!=liawordOrder)
LIA_initAcc = which(wordOrder==liawordOrder)
lowIA_inac = rep(0, Nsubj)
lowIA_acc =rep(0, Nsubj)
highIA_acc = rep(0, Nsubj)
highIA_inac =rep(0, Nsubj)
for(i in 1:length(lia_subjs)){
#print("Low Initial Accuracy condition (12/18 pairs wrong at familiarization)")
ord <- get_subj_ord(lia_subjs[i])
lom = model(par, ord=ord, m=fam_m) # does the training (on prefam matrix)
#acc18afc = diag(lom) / rowSums(lom) # assumes w1=o1 etc w18=o18
#acc18afc = evaluate_accuracy(lom)
mean(acc18afc) # low initial accuracy is good for the model (like adults)
lowIA_inac[i] = mean(acc18afc[LIA_initInac]) # Low IA Initially Inaccurate
lowIA_acc[i] = mean(acc18afc[LIA_initAcc]) # Low IA Initially Accurate
}
for(i in 1:length(hia_subjs)){
ord <- get_subj_ord(hia_subjs[i])
#print("High Initial Accuracy condition (4/10 pairs wrong at familiarization)")
him = model(par, ord=ord, m=fam_m)
acc18afc = diag(him) / rowSums(him)
mean(acc18afc) # high initial accuracy actually hinders the model somehow...cool!
highIA_inac[i] = mean(acc18afc[HIA_initInac]) #
highIA_acc[i] = mean(acc18afc[HIA_initAcc]) #
}
mdat[2,]$Mean = mean(lowIA_inac) # Low IA Initially Inaccurate
mdat[2,]$SD = sd(lowIA_inac)
mdat[1,]$Mean = mean(lowIA_acc) # Low IA Initially Accurate
mdat[1,]$SD = sd(lowIA_acc) #
mdat[4,]$Mean = mean(highIA_inac) #
mdat[4,]$SD = sd(highIA_inac)
mdat[3,]$Mean = mean(highIA_acc) #
mdat[3,]$SD = sd(highIA_acc) #
return(mdat)
}
RunFitnevaChristiansenExp(c(.2, 2, .95)) # need Low IA 10% greater than High IA -- and init accuracy only helps slightly
RunFitnevaChristiansenExp(c(.1, 2, .95))
RunFitnevaChristiansenExp(c(.1, 4, .95))
RunFitnevaChristiansenExp(c(.1, 2, 1))
RunFitnevaChristiansenExp(c(.1, 4, 1))
RunFitnevaChristiansenExp(c(.1, .5, 1))
RunFitnevaChristiansenExp(c(.1, 5, 1))
source("ReadMturkData.R")
subjs <- unique(as.character(study$uniqueId))
lia_subj_dat <- subset(study, condition=="Low Initial Accuracy")
hia_subj_dat <- subset(study, condition=="High Initial Accuracy")
lia_subjs <- unique(as.character(lia_subj_dat$uniqueId))
hia_subjs <- unique(as.character(hia_subj_dat$uniqueId))
get_subj_ord <- function(subj) {
cur_subj <- subj
cur_subj_dat <- subset(study, uniqueId==cur_subj)
ord <- data.matrix(cur_subj_dat[,c(8,9,10,11)]) + 1
return(ord)
}
source("FitChristmodel.R")
RunFitnevaChristiansenExp <- function(par, Nsubj=45) {
# par = c(.2, 2, .95)
mdat = data.frame(Cond=c("Low IA","Low IA", "High IA", "High IA"),
Item=c("Initially Accurate","Initially Inaccurate","Initially Accurate","Initially Inaccurate"),
Mean=NA, SD=NA)
X = par[1]*(par[3]^2)
wordOrder = c(1,3,5,7,9,11,13,15,17,0,2,4,6,8,10,12,14,16) +1
objOrder =  c(0,2,4,6,8,10,12,14,16,1,3,5,7,9,11,13,15,17) + 1
highIA_m = matrix(0, nrow=18, ncol=18)
hiawordOrder =  c(1,14,5,10,9,6,13,15,17,0,2,4,11,8,7,12,3,16) + 1
fam_m = matrix(0, nrow=18, ncol=18)
for(i in 1:length(wordOrder)) {
fam_m[wordOrder[i],objOrder[i]] = X
}
for(i in 1:length(wordOrder)) {
highIA_m[hiawordOrder[i],objOrder[i]] = X
}
HIA_initInac = which(wordOrder!=hiawordOrder)
HIA_initAcc = which(wordOrder==hiawordOrder)
lowIA_m = matrix(0, nrow=18, ncol=18)
liawordOrder =  c(16,14,5,10,9,6,13,2,0,17,15,4,11,8,7,12,3,1) + 1
for(i in 1:length(wordOrder)) {
lowIA_m[liawordOrder[i],objOrder[i]] = X
}
LIA_initInac = which(wordOrder!=liawordOrder)
LIA_initAcc = which(wordOrder==liawordOrder)
lowIA_inac = rep(0, Nsubj)
lowIA_acc =rep(0, Nsubj)
highIA_acc = rep(0, Nsubj)
highIA_inac =rep(0, Nsubj)
for(i in 1:length(lia_subjs)){
#print("Low Initial Accuracy condition (12/18 pairs wrong at familiarization)")
ord <- get_subj_ord(lia_subjs[i]) # actual training trial order for the subject
lom = model(par, ord=ord, m=fam_m) # does the training (on prefam matrix)
#acc18afc = diag(lom) / rowSums(lom) # assumes w1=o1 etc w18=o18
acc18afc = lom[wordOrder, objOrder] / rowSums(lom)
mean(acc18afc) # low initial accuracy is good for the model (like adults)
lowIA_inac[i] = mean(acc18afc[LIA_initInac]) # Low IA Initially Inaccurate
lowIA_acc[i] = mean(acc18afc[LIA_initAcc]) # Low IA Initially Accurate
}
for(i in 1:length(hia_subjs)){
ord <- get_subj_ord(hia_subjs[i])
#print("High Initial Accuracy condition (4/10 pairs wrong at familiarization)")
him = model(par, ord=ord, m=fam_m)
acc18afc = him[wordOrder, objOrder] / rowSums(him)
mean(acc18afc) # high initial accuracy actually hinders the model somehow...cool!
highIA_inac[i] = mean(acc18afc[HIA_initInac]) #
highIA_acc[i] = mean(acc18afc[HIA_initAcc]) #
}
mdat[2,]$Mean = mean(lowIA_inac) # Low IA Initially Inaccurate
mdat[2,]$SD = sd(lowIA_inac)
mdat[1,]$Mean = mean(lowIA_acc) # Low IA Initially Accurate
mdat[1,]$SD = sd(lowIA_acc) #
mdat[4,]$Mean = mean(highIA_inac) #
mdat[4,]$SD = sd(highIA_inac)
mdat[3,]$Mean = mean(highIA_acc) #
mdat[3,]$SD = sd(highIA_acc) #
return(mdat)
}
RunFitnevaChristiansenExp(c(.2, 2, .95)) # need Low IA 10% greater than High IA -- and init accuracy only helps slightly
RunFitnevaChristiansenExp(c(.1, 2, .95))
RunFitnevaChristiansenExp(c(.1, 4, .95))
RunFitnevaChristiansenExp(c(.1, 2, 1))
RunFitnevaChristiansenExp(c(.1, 4, 1))
RunFitnevaChristiansenExp(c(.1, .5, 1))
RunFitnevaChristiansenExp(c(.1, 5, 1))
humdat = data.frame(Cond=c("Low IA","Low IA", "High IA", "High IA"),
Item=c("Initially Accurate","Initially Inaccurate","Initially Accurate","Initially Inaccurate"),
Mean=c(.658,.458,.614,.288), SE=c(.064, .062, .075, .056))
FitChristSSE <- function(par, humdat) {
mdat = RunFitnevaChristiansenExp(par)
return(sum((humdat$Mean - mdat$Mean)^2))
}
require("DEoptim")
# adults
fit = DEoptim(FitChristSSE, lower=c(.001,.1,.5), upper=c(2,20,1), DEoptim.control(reltol=.001, NP=100), humdat=humdat) #
par = c(.2, 2, .95)
Nsubj=45
mdat = data.frame(Cond=c("Low IA","Low IA", "High IA", "High IA"),
Item=c("Initially Accurate","Initially Inaccurate","Initially Accurate","Initially Inaccurate"),
Mean=NA, SD=NA)
X = par[1]*(par[3]^2)
wordOrder = c(1,3,5,7,9,11,13,15,17,0,2,4,6,8,10,12,14,16) +1
objOrder =  c(0,2,4,6,8,10,12,14,16,1,3,5,7,9,11,13,15,17) + 1
highIA_m = matrix(0, nrow=18, ncol=18)
hiawordOrder =  c(1,14,5,10,9,6,13,15,17,0,2,4,11,8,7,12,3,16) + 1
fam_m = matrix(0, nrow=18, ncol=18)
for(i in 1:length(wordOrder)) {
fam_m[wordOrder[i],objOrder[i]] = X
}
fam_m
for(i in 1:length(wordOrder)) {
fam_m[wordOrder[i],objOrder[i]] = X
}
for(i in 1:length(wordOrder)) {
highIA_m[hiawordOrder[i],objOrder[i]] = X
}
HIA_initInac = which(wordOrder!=hiawordOrder)
HIA_initAcc = which(wordOrder==hiawordOrder)
HIA_initAcc
LIA_initAcc
mdat = data.frame(Cond=c("Low IA","Low IA", "High IA", "High IA"),
Item=c("Initially Accurate","Initially Inaccurate","Initially Accurate","Initially Inaccurate"),
Mean=NA, SD=NA)
X = par[1]*(par[3]^2)
wordOrder = c(1,3,5,7,9,11,13,15,17,0,2,4,6,8,10,12,14,16) +1
objOrder =  c(0,2,4,6,8,10,12,14,16,1,3,5,7,9,11,13,15,17) + 1
highIA_m = matrix(0, nrow=18, ncol=18)
hiawordOrder =  c(1,14,5,10,9,6,13,15,17,0,2,4,11,8,7,12,3,16) + 1
fam_m = matrix(0, nrow=18, ncol=18)
for(i in 1:length(wordOrder)) {
fam_m[wordOrder[i],objOrder[i]] = X
}
for(i in 1:length(wordOrder)) {
highIA_m[hiawordOrder[i],objOrder[i]] = X
}
HIA_initInac = which(wordOrder!=hiawordOrder) # initInac item indices in HiIA cond
HIA_initAcc = which(wordOrder==hiawordOrder)
lowIA_m = matrix(0, nrow=18, ncol=18)
liawordOrder =  c(16,14,5,10,9,6,13,2,0,17,15,4,11,8,7,12,3,1) + 1
for(i in 1:length(wordOrder)) {
lowIA_m[liawordOrder[i],objOrder[i]] = X
}
LIA_initInac = which(wordOrder!=liawordOrder)
LIA_initAcc = which(wordOrder==liawordOrder)
LIA_initAcc
LIA_initInac
lia_subjs
Nlo_ss = length(lia_subjs)
Nhi_ss = length(hia_subjs)
lowIA_inac = rep(0, Nlo_ss)
lowIA_acc =rep(0, Nlo_ss)
highIA_acc = rep(0, Nhi_ss)
highIA_inac =rep(0, Nhi_ss)
i=1
ord <- get_subj_ord(lia_subjs[i])
ord
Nlo_ss
Nhi_ss
lom = model(par, ord=ord, m=fam_m)
lom
acc18afc = lom[wordOrder, objOrder] / rowSums(lom)
acc18afc = lom[wordOrder, objOrder] / rowSums(lom)
acc18afc
objOrder
wordOrder
lom[wordOrder, objOrder]
?outer
ord <- get_subj_ord(lia_subjs[i]) # actual training trial order for the subject
lom = model(par, ord=ord, m=fam_m) # does the training (on prefam matrix)
#acc18afc = diag(lom) / rowSums(lom) # assumes w1=o1 etc w18=o18
acc18afc = lom[wordOrder, objOrder] / rowSums(lom)
acc18afc = rep(NA, 18)
for(i in 1:18){
acc18afc[i] = lom[wordOrder[i],objOrder[i]] / sum(lom[wordOrder[i],])
}
acc18afc
mean(acc18afc) # low initial accuracy is good for the model (like adults)
lowIA_inac[i] = mean(acc18afc[LIA_initInac]) # Low IA Initially Inaccurate
lowIA_acc[i] = mean(acc18afc[LIA_initAcc])
mean(acc18afc) # low initial accuracy is good for the model (like adults)
lowIA_inac[i] = mean(acc18afc[LIA_initInac]) # Low IA Initially Inaccurate
lowIA_acc[i] = mean(acc18afc[LIA_initAcc])
lowIA_acc
ord <- get_subj_ord(lia_subjs[i]) # actual training trial order for the subject
lom = model(par, ord=ord, m=fam_m) # does the training (on prefam matrix)
#acc18afc = diag(lom) / rowSums(lom) # assumes w1=o1 etc w18=o18
acc18afc = lom[wordOrder, objOrder] / rowSums(lom)
acc18afc = rep(NA, 18)
for(j in 1:18){
acc18afc[j] = lom[wordOrder[j],objOrder[j]] / sum(lom[wordOrder[j],])
}
mean(acc18afc) # low initial accuracy is good for the model (like adults)
lowIA_inac[i] = mean(acc18afc[LIA_initInac]) # Low IA Initially Inaccurate
lowIA_acc[i] = mean(acc18afc[LIA_initAcc])
i
i
i=1
#print("Low Initial Accuracy condition (12/18 pairs wrong at familiarization)")
ord <- get_subj_ord(lia_subjs[i]) # actual training trial order for the subject
lom = model(par, ord=ord, m=fam_m) # does the training (on prefam matrix)
#acc18afc = diag(lom) / rowSums(lom) # assumes w1=o1 etc w18=o18
acc18afc = lom[wordOrder, objOrder] / rowSums(lom)
acc18afc = rep(NA, 18)
for(j in 1:18){
acc18afc[j] = lom[wordOrder[j],objOrder[j]] / sum(lom[wordOrder[j],])
}
mean(acc18afc) # low initial accuracy is good for the model (like adults)
lowIA_inac[i] = mean(acc18afc[LIA_initInac]) # Low IA Initially Inaccurate
lowIA_acc[i] = mean(acc18afc[LIA_initAcc])
lowIA_inac
lowIA_acc
RunFitnevaChristiansenExp <- function(par, Nsubj=45) {
# par = c(.2, 2, .95)
mdat = data.frame(Cond=c("Low IA","Low IA", "High IA", "High IA"),
Item=c("Initially Accurate","Initially Inaccurate","Initially Accurate","Initially Inaccurate"),
Mean=NA, SD=NA)
X = par[1]*(par[3]^2)
wordOrder = c(1,3,5,7,9,11,13,15,17,0,2,4,6,8,10,12,14,16) +1
objOrder =  c(0,2,4,6,8,10,12,14,16,1,3,5,7,9,11,13,15,17) + 1
highIA_m = matrix(0, nrow=18, ncol=18)
hiawordOrder =  c(1,14,5,10,9,6,13,15,17,0,2,4,11,8,7,12,3,16) + 1
fam_m = matrix(0, nrow=18, ncol=18)
for(i in 1:length(wordOrder)) {
fam_m[wordOrder[i],objOrder[i]] = X
}
for(i in 1:length(wordOrder)) {
highIA_m[hiawordOrder[i],objOrder[i]] = X
}
HIA_initInac = which(wordOrder!=hiawordOrder) # initInac item indices in HiIA cond
HIA_initAcc = which(wordOrder==hiawordOrder)
lowIA_m = matrix(0, nrow=18, ncol=18)
liawordOrder =  c(16,14,5,10,9,6,13,2,0,17,15,4,11,8,7,12,3,1) + 1
for(i in 1:length(wordOrder)) {
lowIA_m[liawordOrder[i],objOrder[i]] = X
}
LIA_initInac = which(wordOrder!=liawordOrder)
LIA_initAcc = which(wordOrder==liawordOrder)
Nlo_ss = length(lia_subjs)
Nhi_ss = length(hia_subjs)
lowIA_inac = rep(0, Nlo_ss)
lowIA_acc =rep(0, Nlo_ss)
highIA_acc = rep(0, Nhi_ss)
highIA_inac =rep(0, Nhi_ss)
for(i in 1:length(lia_subjs)){
#print("Low Initial Accuracy condition (12/18 pairs wrong at familiarization)")
ord <- get_subj_ord(lia_subjs[i]) # actual training trial order for the subject
lom = model(par, ord=ord, m=fam_m) # does the training (on prefam matrix)
#acc18afc = lom[wordOrder, objOrder] / rowSums(lom)
acc18afc = rep(NA, 18)
for(j in 1:18){
acc18afc[j] = lom[wordOrder[j],objOrder[j]] / sum(lom[wordOrder[j],])
}
mean(acc18afc) # low initial accuracy is good for the model (like adults)
lowIA_inac[i] = mean(acc18afc[LIA_initInac]) # Low IA Initially Inaccurate
lowIA_acc[i] = mean(acc18afc[LIA_initAcc]) # Low IA Initially Accurate
}
for(i in 1:length(hia_subjs)){
ord <- get_subj_ord(hia_subjs[i])
#print("High Initial Accuracy condition (4/10 pairs wrong at familiarization)")
him = model(par, ord=ord, m=fam_m)
#acc18afc = him[wordOrder, objOrder] / rowSums(him)
for(j in 1:18){
acc18afc[j] = him[wordOrder[j],objOrder[j]] / sum(him[wordOrder[j],])
}
mean(acc18afc) # high initial accuracy actually hinders the model somehow...cool!
highIA_inac[i] = mean(acc18afc[HIA_initInac]) #
highIA_acc[i] = mean(acc18afc[HIA_initAcc]) #
}
mdat[2,]$Mean = mean(lowIA_inac) # Low IA Initially Inaccurate
mdat[2,]$SD = sd(lowIA_inac)
mdat[1,]$Mean = mean(lowIA_acc) # Low IA Initially Accurate
mdat[1,]$SD = sd(lowIA_acc) #
mdat[4,]$Mean = mean(highIA_inac) #
mdat[4,]$SD = sd(highIA_inac)
mdat[3,]$Mean = mean(highIA_acc) #
mdat[3,]$SD = sd(highIA_acc) #
return(mdat)
}
RunFitnevaChristiansenExp(c(.2, 2, .95)) # need Low IA 10% greater than High IA -- and init accuracy only helps slightly
RunFitnevaChristiansenExp(c(.1, 2, .95))
RunFitnevaChristiansenExp(c(.1, 4, .95))
RunFitnevaChristiansenExp(c(.1, 2, 1))
RunFitnevaChristiansenExp(c(.1, 4, 1))
RunFitnevaChristiansenExp(c(.1, .5, 1))
RunFitnevaChristiansenExp(c(.1, 5, 1))
humdat = data.frame(Cond=c("Low IA","Low IA", "High IA", "High IA"),
Item=c("Initially Accurate","Initially Inaccurate","Initially Accurate","Initially Inaccurate"),
Mean=c(.658,.458,.614,.288), SE=c(.064, .062, .075, .056))
FitChristSSE <- function(par, humdat) {
mdat = RunFitnevaChristiansenExp(par)
return(sum((humdat$Mean - mdat$Mean)^2))
}
require("DEoptim")
# adults
fit = DEoptim(FitChristSSE, lower=c(.001,.1,.5), upper=c(2,20,1), DEoptim.control(reltol=.001, NP=100), humdat=humdat) #
mad = RunFitnevaChristiansenExp(fit$optim$bestmem) # fit$optim$bestmem c(2.0, 0.787, 0.684)
fit$optim$bestval # .0002
sort1[[Sid]] = list(c(2,19,23,14,22,15,10,12,16), c(21,24,9,3,17,13,18), c(4,8,6,5,1,7,20))
sort(unlist(list(c(16,12,13,11,10,9,14,5), c(21,19,22,18,17,23), c(20,2,24,7,1,8,6,3,4,5))))
mad$Cond = factor(mad$Cond, levels=c("Low IA", "High IA"))
require("ggplot2")
dodge <- position_dodge(width=.9)
limits <- with(humdat, aes(ymax=Mean+SE, ymin=Mean-SE))
a <- ggplot(humdat, aes(x=Cond, y=Mean, fill=Item)) + labs(x="Condition", y="Proportion Correct", fill="Items") +
geom_bar(stat="identity", position=dodge) + geom_errorbar(limits,  width=0.2, position=dodge) +
geom_point(data=mad, aes(x=Cond, y=Mean, fill=Item), position=dodge) +
geom_hline(yintercept=1/18, linetype='dashed')
#b <- a + geom_hline(yintercept=1/18, linetype='dashed') # + scale_fill_manual(values=c("red", "orange", "yellow"))
print(a)
ggsave("initial-accuracy18afc_modelfits.pdf", width=4.5, height=4)
dev.off()
sort(unlistlist(c(7,3,8,5,1,4), c(18,6,9,2,20,11,17,13,21,22,24,12), c(16,10,15,14,23,19)))
sort(unlist(list(c(7,3,8,5,1,4), c(18,6,9,2,20,11,17,13,21,22,24,12), c(16,10,15,14,23,19)))
)
sort(unlist(
)
))))))
sort(unlist(list(c(7,3,8,5,1,4), c(18,6,9,2,20,11,17,13,21,22,24,12), c(16,10,15,14,23,19))))
1:24
1:24==unlist(list(c(7,3,8,5,1,4), c(18,6,9,2,20,11,17,13,21,22,24,12), c(16,10,15,14,23,19)))
1:24==sort(unlist(list(c(7,3,8,5,1,4), c(18,6,9,2,20,11,17,13,21,22,24,12), c(16,10,15,14,23,19))))
sort(unlist(list(c(24,12,23,16,13,17,10,22,14,19,21,15), c(20,9), c(5,3,2,11,8,1,7,6,4,18)) ))
sort(unlist(
rjn3
)))))
sort(unlist(list(c(2,19,23,14,22,15,10,12,16), c(21,24,9,3,17,13,18), c(4,8,6,5,1,7,20))))
sort(unlist(list(c(23,16,15,14,19), c(10,13,9,12,11,8,21,22,17,24), c(2,7,6,3,5,1,4,20,8))))
sort(unlist(list(c(16,12,13,11,10,9,14,5), c(21,19,22,18,17,23), c(20,2,24,7,1,8,6,3,4,5))))
sort(unlist(
list(c(3,6,19,20,13), c(10,11,22,15,2,16,24,14,18), c(12,7,8,4,5,17,21,23))
))
15+10+8
15+8
sort(unlist(
list(c(6,1,9,12,24,14,11,18,11), c(5,20,4,17,23,15,10,21), c(3,8,2,22,16,19,13,7))))
sort(unlist(
list(c(8,20,5,1,17,4,24,21,18,7,3,11), c(2,13,10,15,9,12,19,23,22), c(16,14))))
12+9+2
5+6+13
sort(unlist(list(c(7,8,3,4,5), c(20,17,11,1,6,2), c(24,13,16,9,12,10,23,18,21,19,15,22))))
11+8+8
sort(unlist(list(c(19,2,6,1,24,17,20,22,23,18,21), c(1,6,2,7,8,3,4,5), c(22,20,17,23,18,21,19,24))))
sort(unlist(list(c(2,4,8,1,16,9,20,7,5,6,24), c(11,15,14,10,12,13), c(18,19,17,23,21,22))))
